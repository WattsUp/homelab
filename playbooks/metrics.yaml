---
- name: Create exporters
  hosts: scruffy
  tasks:
    - name: Install pihole-exporter for dns0
      become: true
      community.docker.docker_container:
        name: pihole-exporter0
        image: ekofr/pihole-exporter:v0.4.0
        image_name_mismatch: recreate
        networks:
          - name: "{{ 'vlan-' + vlan_management.name }}"
            ipv4_address: "{{ ip_dns_exporter_0 }}"
        dns_servers:
          - "{{ ip_dns_0 }}"
          - "{{ ip_dns_1 }}"
        published_ports:
          - 9617/tcp
        restart_policy: unless-stopped
        state: started
        env:
          PIHOLE_HOSTNAME: "{{ ip_dns_0 }}"
          PIHOLE_PASSWORD: "{{ pihole_admin_password }}"
          PORT: "9617"
    - name: Install pihole-exporter for dns1
      become: true
      community.docker.docker_container:
        name: pihole-exporter1
        image: ekofr/pihole-exporter:v0.4.0
        image_name_mismatch: recreate
        networks:
          - name: "{{ 'vlan-' + vlan_management.name }}"
            ipv4_address: "{{ ip_dns_exporter_1 }}"
        dns_servers:
          - "{{ ip_dns_0 }}"
          - "{{ ip_dns_1 }}"
        published_ports:
          - 9617/tcp
        restart_policy: unless-stopped
        state: started
        env:
          PIHOLE_HOSTNAME: "{{ ip_dns_1 }}"
          PIHOLE_PASSWORD: "{{ pihole_admin_password }}"
          PORT: "9617"
    - name: Install speedtest-exporter
      become: true
      community.docker.docker_container:
        name: speed-test
        image: ghcr.io/miguelndecarvalho/speedtest-exporter:v3.5.4
        image_name_mismatch: recreate
        networks:
          - name: "{{ 'vlan-' + vlan_management.name }}"
            ipv4_address: "{{ ip_speedtest_exporter }}"
        dns_servers:
          - "{{ ip_dns_0 }}"
          - "{{ ip_dns_1 }}"
        published_ports:
          - 9798/tcp
        restart_policy: unless-stopped
        state: started
    - name: Install ntp-exporter
      become: true
      community.docker.docker_container:
        name: ntp-exporter
        image: quay.io/superq/chrony-exporter:v0.10.1
        image_name_mismatch: recreate
        command: >-
          --chrony.address="{{ ip_ntp }}:323"
          --collector.tracking
          --no-collector.sources
        networks:
          - name: "{{ 'vlan-' + vlan_management.name }}"
            ipv4_address: "{{ ip_ntp_exporter }}"
        dns_servers:
          - "{{ ip_dns_0 }}"
          - "{{ ip_dns_1 }}"
        published_ports:
          - 9123/tcp
        restart_policy: unless-stopped
        state: started
    - name: Install pve-exporter
      become: true
      community.docker.docker_container:
        name: pve-exporter
        image: prompve/prometheus-pve-exporter:3.4.3
        image_name_mismatch: recreate
        networks:
          - name: "{{ 'vlan-' + vlan_management.name }}"
            ipv4_address: "{{ ip_pve_exporter }}"
        dns_servers:
          - "{{ ip_dns_0 }}"
          - "{{ ip_dns_1 }}"
        published_ports:
          - 9221/tcp
        restart_policy: unless-stopped
        state: started
        env:
          PVE_USER: root@pam
          PVE_TOKEN_NAME: exporter-token
          PVE_TOKEN_VALUE: "{{ pve_token }}"
- name: Create node exporters
  hosts: nodes
  roles:
    - role: prometheus.prometheus.node_exporter
      node_exporter_web_listen_address: "{{ ip_management }}:9100"
      node_exporter_enabled_collectors:
        - processes
        - interrupts
        - tcpstat
- name: Setup prometheus
  hosts: scruffy
  roles:
    - role: prometheus
      become: true
      prometheus_network: "{{ 'vlan-' + vlan_management.name }}"
      prometheus_ip: "{{ ip_prometheus }}"
      prometheus_alertmanager_network: "{{ 'vlan-' + vlan_management.name }}"
      prometheus_alertmanager_ip: "{{ ip_alertmanager }}"
      prometheus_alertmanager_discord: "{{ alertmanager_discord }}"
      prometheus_grafana_network: "{{ 'vlan-' + vlan_management.name }}"
      prometheus_grafana_ip: "{{ ip_grafana }}"
      prometheus_grafana_org: "{{ domain }}"
      prometheus_grafana_user: "{{ admin }}"
      prometheus_grafana_password: "{{ grafana_admin_password }}"
      prometheus_jobs:
        - name: dns
          static_configs:
            - targets: ["{{ ip_dns_exporter_0 }}:9617"]
              labels:
                host: "dns0"
            - targets: ["{{ ip_dns_exporter_1 }}:9617"]
              labels:
                host: "dns1"
        - name: speedtest
          scrape_interval: 10m
          scrape_timeout: 60s
          static_configs:
            - targets: ["{{ ip_speedtest_exporter }}:9798"]
        - name: time
          static_configs:
            - targets: ["{{ ip_ntp_exporter }}:9123"]
        - name: nginx
          static_configs:
            - targets: ["{{ ip_nginx_exporter }}:4040"]
        - name: proxmox
          static_configs:
            - targets: ["nibbler.{{ domain_lan }}"]
          metrics_path: /pve
          relabel_configs:
            - source_labels: [__address__]
              target_label: __param_target
            - source_labels: [__param_target]
              target_label: instance
            - target_label: __address__
              replacement: "{{ ip_pve_exporter }}:9221"
