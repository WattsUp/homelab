---
- name: Make directories
  ansible.builtin.file:
    path: "{{ item }}"
    state: directory
    mode: "0755"
  loop:
    - /etc/pihole
    - /etc/pihole/pihole
    - /etc/pihole/dnsmasq.d
- name: Create dnsmasq configuration
  ansible.builtin.template:
    src: etc-dnsmasq-conf.jinja
    dest: /etc/pihole/dnsmasq.d/10-ansible.conf
    mode: "0644"
  notify:
    - Reload DNS rules
- name: Install pihole
  become: true
  community.docker.docker_container:
    name: pihole
    image: cbcrowe/pihole-unbound:2024.03.2
    image_name_mismatch: recreate
    hostname: "{{ pihole_hostname }}"
    domainname: "{{ pihole_domain }}"
    networks:
      - name: "{{ pihole_network }}"
        ipv4_address: "{{ pihole_ip }}"
    published_ports:
      - 443/tcp
      - 53/tcp
      - 53/udp
      - 80/tcp
    restart_policy: unless-stopped
    state: started
    volumes:
      - "/etc/pihole/pihole:/etc/pihole:rw"
      - "/etc/pihole/dnsmasq.d:/etc/dnsmasq.d:rw"
    env:
      FTLCONF_REPLY_ADDR4: "{{ pihole_ip }}"
      FTLCONF_LOCAL_IPV4: "{{ pihole_ip }}"
      TZ: "{{ timezone }}"
      WEBPASSWORD: "{{ pihole_password }}"
      WEBTHEME: default-dark
      # Conditional forwarding for DHCP hostname resolution
      REV_SERVER: "true"
      REV_SERVER_CIDR: "{{ pihole_dhcp_subnet }}"
      REV_SERVER_TARGET: "{{ pihole_dhcp_server }}"
      REV_SERVER_DOMAIN: ""
      DNS_FQDN_REQUIRED: "true"
      PIHOLE_WEBPORT: "80"
      PIHOLE_DNS_: 127.0.0.1#5335
      DNSSEC: "true"
      DNSMASQ_LISTENING: single
